@model Medibook.Models.Book

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}

<!-- Sayfa İçeriği -->
<div class="row" style="padding:50px">
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <article class="content dashboard-page">
            <!-- Başlık -->
            <div class="title-block">
                <h3 class="title">
                    Kitap Düzenle
                    <span class="sparkline bar" data-type="bar"></span>
                </h3>
            </div>
            <!-- Başlık -->
            @using (Html.BeginForm("Edit", "Books", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <form>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class=" ">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Category.Name, htmlAttributes: new { @class = "col-sm-2 form-control-label text-xs-right" })
                            <div class="col-sm-10">
                                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">

                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-sm-2 form-control-label text-xs-right" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control boxed" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">

                            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "col-sm-2 form-control-label text-xs-right" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control boxed" } })
                                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">

                            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "col-sm-2 form-control-label text-xs-right" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control boxed" } })
                                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">

                            @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "col-sm-2 form-control-label text-xs-right" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control boxed" } })
                                @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">

                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "col-sm-2 form-control-label text-xs-right" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control boxed" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-sm-2 form-control-label text-xs-right" })
                            <div class="col-sm-10">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control form-control-full", rows = 4 })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.ImageString, htmlAttributes: new { @class = "col-sm-2 form-control-label text-xs-right" })
                            <div class="col-sm-8">
                                @Html.EditorFor(model => model.ImageString, new { htmlAttributes = new { @class = "form-control boxed" } })
                                @Html.ValidationMessageFor(model => model.ImageString, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-2">
                                <a class="btn btn-primary" id="btnDemoTextBox" style=" background-color:antiquewhite" name="ImageString">Resim Yükle </a>
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-sm-12">
                                <button type="submit" class="btn btn-primary" style="float:right"> Kaydet </button>
                            </div>
                        </div>
                    </div>
                </form>
            }

        </article>

    </div>
    <div class="col-md-2"></div>
</div>
<!-- Sayfa İçeriği -->


<script src='//cdn.tinymce.com/4/tinymce.min.js'></script>
<script type="text/javascript">
    tinymce.init({
        selector: 'textarea', //nesne seçimi
        height: 500, //yükseklik ayarı
        theme: 'modern',

        //eklenti ve toolbar nesne seçimleri.
        plugins: [
            'advlist autolink lists link image charmap print preview hr anchor pagebreak',
            'searchreplace wordcount visualblocks visualchars code fullscreen',
            'insertdatetime media nonbreaking save table contextmenu directionality',
            'emoticons template paste textcolor colorpicker textpattern imagetools codesample'
        ],
        toolbar1: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
        toolbar2: 'print preview media | forecolor backcolor emoticons codesample',

        image_advtab: true,
        templates: [
            { title: 'Test template 1', content: 'Test 1' },
            { title: 'Test template 2', content: 'Test 2' }
        ],

        //editör içerisinde kullanılacak css style kaynak yolu
        content_css: [
            '//fast.fonts.net/cssapi/e6dc9b99-64fe-4292-ad98-6974f93cd2a2.css',
            'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css'
        ]
    });
</script>


@section scripts{
    <script type="text/javascript">
        //url=true
        $("#btnDemoTextBox").click(function () {

            window.open('/FileManager/Index/?profile=notinymce&Url=true&BackId=' + this.name, 'demo', 'toolbar=0,location=0,status=0,menubar=0,scrollbars=yes,resizable=1,width=900,height=600');
            return false;
        });

        //urlfalse
        $("#btnDemoTextBox2").click(function () {

            window.open('/FileManager/Index/?profile=notinymce&Url=false&BackId=' + this.name, 'demo', 'toolbar=0,location=0,status=0,menubar=0,scrollbars=yes,resizable=1,width=900,height=600');
            return false;
        });
    </script>
}
